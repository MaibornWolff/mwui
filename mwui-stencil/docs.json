{
  "timestamp": "2023-02-16T13:46:08",
  "compiler": {
    "name": "@stencil/core",
    "version": "2.22.2",
    "typescriptVersion": "4.9.4"
  },
  "components": [
    {
      "filePath": "./src/components/mw-app-bar/mw-app-bar.tsx",
      "encapsulation": "shadow",
      "tag": "mw-app-bar",
      "readme": "# mw-app-bar\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "ariaRole",
          "type": "AriaRolesEnum.NAVIGATION | AriaRolesEnum.TOOLBAR",
          "mutable": false,
          "attr": "aria-role",
          "reflectToAttr": false,
          "docs": "Set the role of the header",
          "docsTags": [],
          "default": "AriaRolesEnum.NAVIGATION",
          "values": [
            {
              "type": "AriaRolesEnum.NAVIGATION"
            },
            {
              "type": "AriaRolesEnum.TOOLBAR"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "position",
          "type": "\"absolute\" | \"fixed\" | \"relative\" | \"sticky\"",
          "mutable": false,
          "attr": "position",
          "reflectToAttr": false,
          "docs": "Position of App Bar within viewport",
          "docsTags": [],
          "default": "\"relative\"",
          "values": [
            {
              "value": "absolute",
              "type": "string"
            },
            {
              "value": "fixed",
              "type": "string"
            },
            {
              "value": "relative",
              "type": "string"
            },
            {
              "value": "sticky",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/mw-app-bar-title/mw-app-bar-title.tsx",
      "encapsulation": "shadow",
      "tag": "mw-app-bar-title",
      "readme": "# mw-header-title\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/mw-avatar/mw-avatar.tsx",
      "encapsulation": "shadow",
      "tag": "mw-avatar",
      "readme": "# mw-avatar\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "alt",
          "type": "string",
          "mutable": false,
          "attr": "alt",
          "reflectToAttr": false,
          "docs": "Alt text, first letter used as fallback when no src or icon given",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "icon",
          "type": "string",
          "mutable": false,
          "attr": "icon",
          "reflectToAttr": false,
          "docs": "Icon name. Will be ignored if `src` is provided",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "\"large\" | \"medium\" | \"small\" | \"x-large\" | \"x-small\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "Size variant",
          "docsTags": [],
          "default": "SizeEnum.MEDIUM",
          "values": [
            {
              "value": "large",
              "type": "string"
            },
            {
              "value": "medium",
              "type": "string"
            },
            {
              "value": "small",
              "type": "string"
            },
            {
              "value": "x-large",
              "type": "string"
            },
            {
              "value": "x-small",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "src",
          "type": "string",
          "mutable": false,
          "attr": "src",
          "reflectToAttr": false,
          "docs": "Image source",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "testId",
          "type": "string",
          "mutable": false,
          "attr": "test-id",
          "reflectToAttr": false,
          "docs": "Test Id",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": ["mw-icon"],
      "dependencyGraph": {
        "mw-avatar": ["mw-icon"]
      }
    },
    {
      "filePath": "./src/components/mw-backdrop/mw-backdrop.tsx",
      "encapsulation": "shadow",
      "tag": "mw-backdrop",
      "readme": "# mw-backdrop\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "backdropDismiss",
          "type": "boolean",
          "mutable": false,
          "attr": "backdrop-dismiss",
          "reflectToAttr": false,
          "docs": "determines wether the backdrop will be dismissed by click",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "backdropClick",
          "detail": "void",
          "bubbles": true,
          "cancelable": true,
          "composed": true,
          "docs": "Event after backdrop was clicked",
          "docsTags": []
        }
      ],
      "listeners": [
        {
          "event": "click",
          "capture": true,
          "passive": false
        }
      ],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": ["mw-modal"],
      "dependencies": [],
      "dependencyGraph": {
        "mw-modal": ["mw-backdrop"]
      }
    },
    {
      "filePath": "./src/components/mw-button/mw-button.component.tsx",
      "encapsulation": "shadow",
      "tag": "mw-button",
      "readme": "# mw-button\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Visually and functionally disable button",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "href",
          "type": "string",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "If provided the button will act as a link",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Label to be displayed",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "size",
          "type": "\"large\" | \"medium\" | \"small\" | \"x-large\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "Button size",
          "docsTags": [],
          "default": "ButtonSizeEnum.MEDIUM",
          "values": [
            {
              "value": "large",
              "type": "string"
            },
            {
              "value": "medium",
              "type": "string"
            },
            {
              "value": "small",
              "type": "string"
            },
            {
              "value": "x-large",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "target",
          "type": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\"",
          "mutable": false,
          "attr": "target",
          "reflectToAttr": false,
          "docs": "If using href the target prop can be provided",
          "docsTags": [],
          "default": "TargetEnum.SELF",
          "values": [
            {
              "value": "_blank",
              "type": "string"
            },
            {
              "value": "_parent",
              "type": "string"
            },
            {
              "value": "_self",
              "type": "string"
            },
            {
              "value": "_top",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "testId",
          "type": "string",
          "mutable": false,
          "attr": "test-id",
          "reflectToAttr": false,
          "docs": "Provide unique identifier for automated testing",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "variant",
          "type": "\"filled\" | \"ghost\" | \"outline\"",
          "mutable": false,
          "attr": "variant",
          "reflectToAttr": false,
          "docs": "Button variants",
          "docsTags": [],
          "default": "ButtonVariantEnum.FILLED",
          "values": [
            {
              "value": "filled",
              "type": "string"
            },
            {
              "value": "ghost",
              "type": "string"
            },
            {
              "value": "outline",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "clickEmitter",
          "detail": "any",
          "bubbles": true,
          "cancelable": false,
          "composed": false,
          "docs": "'onClick' event is fired when clicking the button, unless it is used with a `href` prop.",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "button",
          "docs": ""
        }
      ],
      "dependents": ["mw-login"],
      "dependencies": [],
      "dependencyGraph": {
        "mw-login": ["mw-button"]
      }
    },
    {
      "filePath": "./src/components/mw-card/mw-card.tsx",
      "encapsulation": "shadow",
      "tag": "mw-card",
      "readme": "# mw-card\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "elevated",
          "type": "boolean",
          "mutable": false,
          "attr": "elevated",
          "reflectToAttr": false,
          "docs": "Use box-shadow for elevation style",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "outlined",
          "type": "boolean",
          "mutable": false,
          "attr": "outlined",
          "reflectToAttr": false,
          "docs": "Display outline",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "testId",
          "type": "string",
          "mutable": false,
          "attr": "test-id",
          "reflectToAttr": false,
          "docs": "Provide unique identifier for automated testing",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "clickEmitter",
          "detail": "any",
          "bubbles": true,
          "cancelable": false,
          "composed": false,
          "docs": "Emits an event when MwCard is clicked",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/mw-card-body/mw-card-body.tsx",
      "encapsulation": "shadow",
      "tag": "mw-card-body",
      "readme": "# mw-card-body\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/mw-card-footer/mw-card-footer.tsx",
      "encapsulation": "shadow",
      "tag": "mw-card-footer",
      "readme": "# mw-card-footer\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "justifyCenter",
          "type": "boolean",
          "mutable": false,
          "attr": "justify-center",
          "reflectToAttr": false,
          "docs": "justify-content: center",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "justifyEnd",
          "type": "boolean",
          "mutable": false,
          "attr": "justify-end",
          "reflectToAttr": false,
          "docs": "justify-content: end",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "justifyFlexEnd",
          "type": "boolean",
          "mutable": false,
          "attr": "justify-flex-end",
          "reflectToAttr": false,
          "docs": "justify-content: flex-end",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "justifyFlexStart",
          "type": "boolean",
          "mutable": false,
          "attr": "justify-flex-start",
          "reflectToAttr": false,
          "docs": "justify-content: flex-start",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "justifyLeft",
          "type": "boolean",
          "mutable": false,
          "attr": "justify-left",
          "reflectToAttr": false,
          "docs": "justify-content: left",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "justifyNormal",
          "type": "boolean",
          "mutable": false,
          "attr": "justify-normal",
          "reflectToAttr": false,
          "docs": "justify-content: normal",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "justifyRight",
          "type": "boolean",
          "mutable": false,
          "attr": "justify-right",
          "reflectToAttr": false,
          "docs": "justify-content: right",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "justifySpaceAround",
          "type": "boolean",
          "mutable": false,
          "attr": "justify-space-around",
          "reflectToAttr": false,
          "docs": "justify-content: space-around",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "justifySpaceBetween",
          "type": "boolean",
          "mutable": false,
          "attr": "justify-space-between",
          "reflectToAttr": false,
          "docs": "justify-content: space-between",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "justifySpaceEvenly",
          "type": "boolean",
          "mutable": false,
          "attr": "justify-space-evenly",
          "reflectToAttr": false,
          "docs": "justify-content: space-evenly",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "justifyStart",
          "type": "boolean",
          "mutable": false,
          "attr": "justify-start",
          "reflectToAttr": false,
          "docs": "justify-content: start",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/mw-card-header/mw-card-header.tsx",
      "encapsulation": "shadow",
      "tag": "mw-card-header",
      "readme": "# mw-card-header\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "header",
          "type": "string",
          "mutable": false,
          "attr": "header",
          "reflectToAttr": false,
          "docs": "Header to be displayed in mw-card-header",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "subheader",
          "type": "string",
          "mutable": false,
          "attr": "subheader",
          "reflectToAttr": false,
          "docs": "Subheader to be displayed in mw-card-header",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/mw-card-image/mw-card-image.tsx",
      "encapsulation": "shadow",
      "tag": "mw-card-image",
      "readme": "# mw-card-image\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "alt",
          "type": "string",
          "mutable": false,
          "attr": "alt",
          "reflectToAttr": false,
          "docs": "Alt text for the image",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "src",
          "type": "string",
          "mutable": false,
          "attr": "src",
          "reflectToAttr": false,
          "docs": "Image source",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/mw-card-title/mw-card-title.tsx",
      "encapsulation": "shadow",
      "tag": "mw-card-title",
      "readme": "# mw-card-title\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "metadata",
          "type": "string",
          "mutable": false,
          "attr": "metadata",
          "reflectToAttr": false,
          "docs": "Metadata to be displayed in mw-card-title",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "subtitle",
          "type": "string",
          "mutable": false,
          "attr": "subtitle",
          "reflectToAttr": false,
          "docs": "Subtitle to be displayed in mw-card-title",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "title",
          "type": "string",
          "mutable": false,
          "attr": "title",
          "reflectToAttr": false,
          "docs": "Title to be displayed in mw-card-title",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/mw-checkbox/mw-checkbox.tsx",
      "encapsulation": "shadow",
      "tag": "mw-checkbox",
      "readme": "# mw-checkbox\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "checked",
          "type": "boolean",
          "mutable": true,
          "attr": "checked",
          "reflectToAttr": true,
          "docs": "Whether input is checked",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Whether input is disabled",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Label to be displayed",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Name of checkbox input",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "testId",
          "type": "string",
          "mutable": false,
          "attr": "test-id",
          "reflectToAttr": false,
          "docs": "Provide unique identifier for automated testing",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": true,
          "docs": "Value of checkbox input",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "emitter",
          "detail": "any",
          "bubbles": true,
          "cancelable": false,
          "composed": false,
          "docs": "MwCheckbox emits an event when checkbox checked state is changed",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": ["mw-login"],
      "dependencies": ["mw-icon"],
      "dependencyGraph": {
        "mw-checkbox": ["mw-icon"],
        "mw-login": ["mw-checkbox"]
      }
    },
    {
      "filePath": "./src/components/mw-chip/mw-chip.tsx",
      "encapsulation": "shadow",
      "tag": "mw-chip",
      "readme": "# mw-chip\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": true,
          "docs": "Visually and functionally disable button",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "icon",
          "type": "string",
          "mutable": false,
          "attr": "icon",
          "reflectToAttr": false,
          "docs": "Name identifier of icon to be displayed in chip",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": true,
          "attr": "selected",
          "reflectToAttr": true,
          "docs": "Selection state that changes onToggle. Can be set as mutable prop.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "showClose",
          "type": "boolean",
          "mutable": false,
          "attr": "show-close",
          "reflectToAttr": false,
          "docs": "Flag wether to show close icon or not",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "testId",
          "type": "string",
          "mutable": false,
          "attr": "test-id",
          "reflectToAttr": false,
          "docs": "Provide unique identifier for automated testing",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "emitter",
          "detail": "any",
          "bubbles": true,
          "cancelable": false,
          "composed": false,
          "docs": "MwChip emits an event when chip is clicked or chip is closed",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": ["mw-icon"],
      "dependencyGraph": {
        "mw-chip": ["mw-icon"]
      }
    },
    {
      "filePath": "./src/components/mw-divider/mw-divider.tsx",
      "encapsulation": "shadow",
      "tag": "mw-divider",
      "readme": "# mw-divider\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "inset",
          "type": "boolean",
          "mutable": false,
          "attr": "inset",
          "reflectToAttr": false,
          "docs": "Whether the divider is a middle-inset",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/mw-icon/mw-icon.tsx",
      "encapsulation": "shadow",
      "tag": "mw-icon",
      "readme": "# mw-icon\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "color",
          "type": "string",
          "mutable": false,
          "attr": "color",
          "reflectToAttr": false,
          "docs": "Icon color",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "fill",
          "type": "boolean",
          "mutable": false,
          "attr": "fill",
          "reflectToAttr": false,
          "docs": "Fill gives you the ability to modify the default icon style. A single icon can render both unfilled and filled states.",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "icon",
          "type": "string",
          "mutable": false,
          "attr": "icon",
          "reflectToAttr": false,
          "docs": "The icon name to be rendered",
          "docsTags": [],
          "default": "null",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "\"large\" | \"medium\" | \"small\" | \"x-large\" | \"x-small\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "This controls both optical size and font-size. Font-size can be set independently in styles. (Optical) size for the image to look the same at different sizes, the stroke weight (thickness) changes as the icon size scales. Optical size offers a way to automatically adjust the stroke weight when you increase or decrease the symbol size.",
          "docsTags": [],
          "default": "SizeEnum.SMALL",
          "values": [
            {
              "value": "large",
              "type": "string"
            },
            {
              "value": "medium",
              "type": "string"
            },
            {
              "value": "small",
              "type": "string"
            },
            {
              "value": "x-large",
              "type": "string"
            },
            {
              "value": "x-small",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "weight",
          "type": "number",
          "mutable": false,
          "attr": "weight",
          "reflectToAttr": false,
          "docs": "Weight defines the symbol’s stroke weight, with a range of weights between thin (100) and bold (700). Weight can also affect the overall size of the symbol.",
          "docsTags": [],
          "default": "400",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": ["mw-avatar", "mw-checkbox", "mw-chip", "mw-icon-gallery", "mw-login", "mw-slider", "mw-tab"],
      "dependencies": [],
      "dependencyGraph": {
        "mw-avatar": ["mw-icon"],
        "mw-checkbox": ["mw-icon"],
        "mw-chip": ["mw-icon"],
        "mw-icon-gallery": ["mw-icon"],
        "mw-login": ["mw-icon"],
        "mw-slider": ["mw-icon"],
        "mw-tab": ["mw-icon"]
      }
    },
    {
      "filePath": "./src/components/mw-icon-gallery/mw-icon-gallery.tsx",
      "encapsulation": "shadow",
      "tag": "mw-icon-gallery",
      "readme": "# mw-icon-gallery\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "icons",
          "type": "string[]",
          "mutable": false,
          "reflectToAttr": false,
          "docs": "The icons that should be rendered",
          "docsTags": [],
          "default": "icons",
          "values": [
            {
              "type": "string[]"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": ["mw-textfield", "mw-icon", "mw-switch"],
      "dependencyGraph": {
        "mw-icon-gallery": ["mw-textfield", "mw-icon", "mw-switch"]
      }
    },
    {
      "filePath": "./src/components/mw-link/mw-link.tsx",
      "encapsulation": "shadow",
      "tag": "mw-link",
      "readme": "# mw-link\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "href",
          "type": "string",
          "mutable": false,
          "attr": "href",
          "reflectToAttr": false,
          "docs": "URL to where the link should lead",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": true
        },
        {
          "name": "target",
          "type": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\"",
          "mutable": false,
          "attr": "target",
          "reflectToAttr": false,
          "docs": "Target Prop for HTML 'a' tag",
          "docsTags": [],
          "default": "TargetEnum.SELF",
          "values": [
            {
              "value": "_blank",
              "type": "string"
            },
            {
              "value": "_parent",
              "type": "string"
            },
            {
              "value": "_self",
              "type": "string"
            },
            {
              "value": "_top",
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "underline",
          "type": "boolean",
          "mutable": false,
          "attr": "underline",
          "reflectToAttr": false,
          "docs": "Dictates whether link has an underline",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": ["mw-login"],
      "dependencies": [],
      "dependencyGraph": {
        "mw-login": ["mw-link"]
      }
    },
    {
      "filePath": "./src/components/mw-login/mw-login.tsx",
      "encapsulation": "shadow",
      "tag": "mw-login",
      "readme": "# mw-login\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "backgroundImage",
          "type": "string",
          "mutable": false,
          "attr": "background-image",
          "reflectToAttr": false,
          "docs": "URL to the image that should be displayed",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "forgotPasswordHref",
          "type": "string",
          "mutable": false,
          "attr": "forgot-password-href",
          "reflectToAttr": false,
          "docs": "Wether or not the forgot password button should be displayed",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "headline",
          "type": "string",
          "mutable": false,
          "attr": "headline",
          "reflectToAttr": false,
          "docs": "Headline text",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "layout",
          "type": "\"center\" | \"end\" | \"start\"",
          "mutable": false,
          "attr": "layout",
          "reflectToAttr": false,
          "docs": "In which layout the Login component should be displayed",
          "docsTags": [],
          "default": "LoginLayoutEnum.CENTER",
          "values": [
            {
              "value": "center",
              "type": "string"
            },
            {
              "value": "end",
              "type": "string"
            },
            {
              "value": "start",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "logo",
          "type": "string",
          "mutable": false,
          "attr": "logo",
          "reflectToAttr": false,
          "docs": "URL to the image that should be displayed",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "signUpHref",
          "type": "string",
          "mutable": false,
          "attr": "sign-up-href",
          "reflectToAttr": false,
          "docs": "Wether or not the signUp prompt should be displayed",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "submit",
          "detail": "void",
          "bubbles": true,
          "cancelable": false,
          "composed": false,
          "docs": "Event emitted after login button was clicked",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": ["mw-textfield", "mw-icon", "mw-checkbox", "mw-link", "mw-button"],
      "dependencyGraph": {
        "mw-login": ["mw-textfield", "mw-icon", "mw-checkbox", "mw-link", "mw-button"],
        "mw-checkbox": ["mw-icon"]
      }
    },
    {
      "filePath": "./src/components/mw-menu/mw-menu.tsx",
      "encapsulation": "shadow",
      "tag": "mw-menu",
      "readme": "# mw-menu\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "open",
          "type": "boolean",
          "mutable": false,
          "attr": "open",
          "reflectToAttr": true,
          "docs": "Whether the menu is open",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "placement",
          "type": "\"bottom\" | \"bottom-end\" | \"bottom-start\" | \"left\" | \"left-end\" | \"left-start\" | \"right\" | \"right-end\" | \"right-start\" | \"top\" | \"top-end\" | \"top-start\"",
          "mutable": false,
          "attr": "placement",
          "reflectToAttr": false,
          "docs": "Placement relative to anchor element",
          "docsTags": [],
          "default": "\"bottom-end\"",
          "values": [
            {
              "value": "bottom",
              "type": "string"
            },
            {
              "value": "bottom-end",
              "type": "string"
            },
            {
              "value": "bottom-start",
              "type": "string"
            },
            {
              "value": "left",
              "type": "string"
            },
            {
              "value": "left-end",
              "type": "string"
            },
            {
              "value": "left-start",
              "type": "string"
            },
            {
              "value": "right",
              "type": "string"
            },
            {
              "value": "right-end",
              "type": "string"
            },
            {
              "value": "right-start",
              "type": "string"
            },
            {
              "value": "top",
              "type": "string"
            },
            {
              "value": "top-end",
              "type": "string"
            },
            {
              "value": "top-start",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "testId",
          "type": "string",
          "mutable": false,
          "attr": "test-id",
          "reflectToAttr": false,
          "docs": "Provide unique identifier for automated testing",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": ["mw-popover"],
      "dependencyGraph": {
        "mw-menu": ["mw-popover"]
      }
    },
    {
      "filePath": "./src/components/mw-menu-item/mw-menu-item.tsx",
      "encapsulation": "shadow",
      "tag": "mw-menu-item",
      "readme": "# mw-menu-item\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Disabled state",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": true,
          "docs": "Selected state",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "subtitle",
          "type": "string",
          "mutable": false,
          "attr": "subtitle",
          "reflectToAttr": false,
          "docs": "Menu item subtitle",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "title",
          "type": "string",
          "mutable": false,
          "attr": "title",
          "reflectToAttr": false,
          "docs": "Menu item title",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "clickEmitter",
          "detail": "any",
          "bubbles": true,
          "cancelable": false,
          "composed": false,
          "docs": "MwMenuItem emits an event when its clicked",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/mw-menu-list/mw-menu-list.tsx",
      "encapsulation": "shadow",
      "tag": "mw-menu-list",
      "readme": "# mw-menu-list\n\n\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "testId",
          "type": "string",
          "mutable": false,
          "attr": "test-id",
          "reflectToAttr": false,
          "docs": "Provide unique identifier for automated testing",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/mw-modal/mw-modal.tsx",
      "encapsulation": "shadow",
      "tag": "mw-modal",
      "readme": "# mw-modal\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "backdropDismiss",
          "type": "boolean",
          "mutable": false,
          "attr": "backdrop-dismiss",
          "reflectToAttr": false,
          "docs": "Determines wether or not backdrop should dismiss modal",
          "docsTags": [],
          "default": "true",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "dismissTrigger",
          "type": "string",
          "mutable": false,
          "attr": "dismiss-trigger",
          "reflectToAttr": false,
          "docs": "id used to dismiss the modal",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "isOpen",
          "type": "boolean",
          "mutable": false,
          "attr": "is-open",
          "reflectToAttr": false,
          "docs": "Modal can be opened closed with this input property",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "size",
          "type": "\"default\" | \"small\"",
          "mutable": false,
          "attr": "size",
          "reflectToAttr": false,
          "docs": "Determines the max size that the modal takes horizontally",
          "docsTags": [],
          "default": "ModalSizeEnum.DEFAULT",
          "values": [
            {
              "value": "default",
              "type": "string"
            },
            {
              "value": "small",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "trigger",
          "type": "string",
          "mutable": false,
          "attr": "trigger",
          "reflectToAttr": false,
          "docs": "id used to present the modal",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [
        {
          "name": "dismiss",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "dismiss() => Promise<void>",
          "parameters": [],
          "docs": "Method to dismiss the modal",
          "docsTags": []
        },
        {
          "name": "present",
          "returns": {
            "type": "Promise<void>",
            "docs": ""
          },
          "signature": "present() => Promise<void>",
          "parameters": [],
          "docs": "Method to present the modal",
          "docsTags": []
        }
      ],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "backdrop",
          "docs": ""
        },
        {
          "name": "content",
          "docs": ""
        }
      ],
      "dependents": [],
      "dependencies": ["mw-backdrop"],
      "dependencyGraph": {
        "mw-modal": ["mw-backdrop"]
      }
    },
    {
      "filePath": "./src/components/mw-modal-footer/mw-modal-footer.tsx",
      "encapsulation": "shadow",
      "tag": "mw-modal-footer",
      "readme": "# mw-modal-footer\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/mw-modal-title/mw-modal-title.tsx",
      "encapsulation": "shadow",
      "tag": "mw-modal-title",
      "readme": "# mw-modal-title\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "description",
          "type": "string",
          "mutable": false,
          "attr": "description",
          "reflectToAttr": false,
          "docs": "Description that should be displayed",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "headline",
          "type": "string",
          "mutable": false,
          "attr": "headline",
          "reflectToAttr": false,
          "docs": "Title that should be displayed",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/mw-popover/mw-popover.tsx",
      "encapsulation": "shadow",
      "tag": "mw-popover",
      "readme": "# mw-popover\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "dismissable",
          "type": "boolean",
          "mutable": false,
          "attr": "dismissable",
          "reflectToAttr": false,
          "docs": "If set to true, the popover can be closed by clicking outside",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Name used internally to reference anchor and content elements",
          "docsTags": [],
          "default": "\"tooltip\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "noPadding",
          "type": "boolean",
          "mutable": false,
          "attr": "no-padding",
          "reflectToAttr": false,
          "docs": "disable default padding",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "open",
          "type": "boolean",
          "mutable": true,
          "attr": "open",
          "reflectToAttr": false,
          "docs": "Whether the popover is visible",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "placement",
          "type": "\"bottom\" | \"bottom-end\" | \"bottom-start\" | \"left\" | \"left-end\" | \"left-start\" | \"right\" | \"right-end\" | \"right-start\" | \"top\" | \"top-end\" | \"top-start\"",
          "mutable": false,
          "attr": "placement",
          "reflectToAttr": false,
          "docs": "Placement relative to anchor element",
          "docsTags": [],
          "default": "\"bottom\"",
          "values": [
            {
              "value": "bottom",
              "type": "string"
            },
            {
              "value": "bottom-end",
              "type": "string"
            },
            {
              "value": "bottom-start",
              "type": "string"
            },
            {
              "value": "left",
              "type": "string"
            },
            {
              "value": "left-end",
              "type": "string"
            },
            {
              "value": "left-start",
              "type": "string"
            },
            {
              "value": "right",
              "type": "string"
            },
            {
              "value": "right-end",
              "type": "string"
            },
            {
              "value": "right-start",
              "type": "string"
            },
            {
              "value": "top",
              "type": "string"
            },
            {
              "value": "top-end",
              "type": "string"
            },
            {
              "value": "top-start",
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "testId",
          "type": "string",
          "mutable": false,
          "attr": "test-id",
          "reflectToAttr": false,
          "docs": "Provide unique identifier for automated testing",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": ["mw-menu"],
      "dependencies": [],
      "dependencyGraph": {
        "mw-menu": ["mw-popover"]
      }
    },
    {
      "filePath": "./src/components/mw-radio/mw-radio.tsx",
      "encapsulation": "none",
      "tag": "mw-radio",
      "readme": "# mw-radio\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "checked",
          "type": "boolean",
          "mutable": true,
          "attr": "checked",
          "reflectToAttr": true,
          "docs": "Whether the radio button is checked",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Visually and functionally disbale radio button",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Label to be displayed",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Analog to HTML 'name' attribute used to group radios for unique selection",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "testId",
          "type": "string",
          "mutable": false,
          "attr": "test-id",
          "reflectToAttr": false,
          "docs": "Should be provided for automated testing",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "mutable": false,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "Value of the radio button",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/mw-radio-group/mw-radio-group.tsx",
      "encapsulation": "none",
      "tag": "mw-radio-group",
      "readme": "# mw-radio-group\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "value",
          "type": "number | string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": false,
          "docs": "current value of the radio-group",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "radioChange",
          "detail": "{ value?: string | number; }",
          "bubbles": true,
          "cancelable": false,
          "composed": false,
          "docs": "Event emitted when radioGroup value changes (after radio selection)",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": [],
      "dependencyGraph": {}
    },
    {
      "filePath": "./src/components/mw-slider/mw-slider.tsx",
      "encapsulation": "shadow",
      "tag": "mw-slider",
      "readme": "# mw-slider\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Disable range input",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "endIcon",
          "type": "string",
          "mutable": false,
          "attr": "end-icon",
          "reflectToAttr": false,
          "docs": "Icon to be displayed to right of the slider",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "helperText",
          "type": "string",
          "mutable": false,
          "attr": "helper-text",
          "reflectToAttr": false,
          "docs": "input helper-text",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "inline",
          "type": "boolean",
          "mutable": false,
          "attr": "inline",
          "reflectToAttr": false,
          "docs": "Display label and input horizonally",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "input label",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "max",
          "type": "number",
          "mutable": false,
          "attr": "max",
          "reflectToAttr": false,
          "docs": "max range value",
          "docsTags": [],
          "default": "100",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "min",
          "type": "number",
          "mutable": false,
          "attr": "min",
          "reflectToAttr": false,
          "docs": "min range value",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "Name of range input",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "startIcon",
          "type": "string",
          "mutable": false,
          "attr": "start-icon",
          "reflectToAttr": false,
          "docs": "Icon to be displayed to left of the slider",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "step",
          "type": "number",
          "mutable": false,
          "attr": "step",
          "reflectToAttr": false,
          "docs": "step for range value",
          "docsTags": [],
          "default": "1",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "testId",
          "type": "string",
          "mutable": false,
          "attr": "test-id",
          "reflectToAttr": false,
          "docs": "Provide unique identifier for automated testing",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "value",
          "type": "number",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": true,
          "docs": "value of range input",
          "docsTags": [],
          "default": "0",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": ["mw-icon"],
      "dependencyGraph": {
        "mw-slider": ["mw-icon"]
      }
    },
    {
      "filePath": "./src/components/mw-switch/mw-switch.tsx",
      "encapsulation": "shadow",
      "tag": "mw-switch",
      "readme": "# mw-switch\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "checked",
          "type": "boolean",
          "mutable": true,
          "attr": "checked",
          "reflectToAttr": false,
          "docs": "Switch state",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Visually and functionally disable switch",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Fixed label to be displayed next to the toggle switch",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "offText",
          "type": "string",
          "mutable": false,
          "attr": "off-text",
          "reflectToAttr": false,
          "docs": "Label to be shown when switch state is unchecked. Overrides label prop",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "onText",
          "type": "string",
          "mutable": false,
          "attr": "on-text",
          "reflectToAttr": false,
          "docs": "Label to be shown when switch state is checked. Overrides label prop",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "testId",
          "type": "string",
          "mutable": false,
          "attr": "test-id",
          "reflectToAttr": false,
          "docs": "Provide unique identifier for automated testing",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "emitter",
          "detail": "any",
          "bubbles": true,
          "cancelable": false,
          "composed": false,
          "docs": "MwSwitch emits an event when switch checked state changes",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": ["mw-icon-gallery"],
      "dependencies": [],
      "dependencyGraph": {
        "mw-icon-gallery": ["mw-switch"]
      }
    },
    {
      "filePath": "./src/components/mw-tab/mw-tab.tsx",
      "encapsulation": "shadow",
      "tag": "mw-tab",
      "readme": "# mw-tab\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Dictates if the tab is disabled",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "icon",
          "type": "string",
          "mutable": false,
          "attr": "icon",
          "reflectToAttr": false,
          "docs": "Icon to be displayed",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": false,
          "docs": "Label to be displayed",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "mutable": false,
          "attr": "selected",
          "reflectToAttr": false,
          "docs": "Dictates if tab has selected state",
          "docsTags": [],
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": ["mw-tabs"],
      "dependencies": ["mw-icon"],
      "dependencyGraph": {
        "mw-tab": ["mw-icon"],
        "mw-tabs": ["mw-tab"]
      }
    },
    {
      "filePath": "./src/components/mw-tabs/mw-tabs.tsx",
      "encapsulation": "shadow",
      "tag": "mw-tabs",
      "readme": "# mw-tabs\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "selected",
          "type": "number",
          "mutable": true,
          "attr": "selected",
          "reflectToAttr": true,
          "docs": "Dictates which tab is pre-selected. Omit if no tab should be pre-selected.",
          "docsTags": [],
          "default": "null",
          "values": [
            {
              "type": "number"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "testId",
          "type": "string",
          "mutable": false,
          "attr": "test-id",
          "reflectToAttr": false,
          "docs": "Test Id",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        }
      ],
      "methods": [],
      "events": [],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [],
      "dependents": [],
      "dependencies": ["mw-tab"],
      "dependencyGraph": {
        "mw-tabs": ["mw-tab"],
        "mw-tab": ["mw-icon"]
      }
    },
    {
      "filePath": "./src/components/mw-textfield/mw-textfield.tsx",
      "encapsulation": "shadow",
      "tag": "mw-textfield",
      "readme": "# mw-textfield\n",
      "docs": "",
      "docsTags": [],
      "usage": {},
      "props": [
        {
          "name": "disabled",
          "type": "boolean",
          "mutable": false,
          "attr": "disabled",
          "reflectToAttr": false,
          "docs": "Visually and functionally disabled input",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "hasError",
          "type": "boolean",
          "mutable": false,
          "attr": "has-error",
          "reflectToAttr": false,
          "docs": "Use to display input and helper-text in error state",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "helperText",
          "type": "string",
          "mutable": false,
          "attr": "helper-text",
          "reflectToAttr": true,
          "docs": "HelperText to be displayed. Can be used as hint or error text when combined with `has-error`",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "inline",
          "type": "boolean",
          "mutable": false,
          "attr": "inline",
          "reflectToAttr": false,
          "docs": "Display label and input horizonally",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "mutable": false,
          "attr": "label",
          "reflectToAttr": true,
          "docs": "Label to be displayed",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "mutable": false,
          "attr": "name",
          "reflectToAttr": false,
          "docs": "input field name",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": false,
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "mutable": false,
          "attr": "placeholder",
          "reflectToAttr": false,
          "docs": "Placeholder to be displayed",
          "docsTags": [],
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "mutable": false,
          "attr": "required",
          "reflectToAttr": false,
          "docs": "Mark input as required",
          "docsTags": [],
          "default": "false",
          "values": [
            {
              "type": "boolean"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "type",
          "type": "string",
          "mutable": false,
          "attr": "type",
          "reflectToAttr": false,
          "docs": "HTML Input type",
          "docsTags": [],
          "default": "\"text\"",
          "values": [
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        },
        {
          "name": "value",
          "type": "number | string",
          "mutable": true,
          "attr": "value",
          "reflectToAttr": true,
          "docs": "input field value",
          "docsTags": [],
          "values": [
            {
              "type": "number"
            },
            {
              "type": "string"
            }
          ],
          "optional": true,
          "required": false
        }
      ],
      "methods": [],
      "events": [
        {
          "event": "valueChanged",
          "detail": "string",
          "bubbles": true,
          "cancelable": true,
          "composed": false,
          "docs": "MwTextfield emits an event when textfield value changes",
          "docsTags": []
        }
      ],
      "listeners": [],
      "styles": [],
      "slots": [],
      "parts": [
        {
          "name": "icon-end",
          "docs": ""
        },
        {
          "name": "icon-start",
          "docs": ""
        }
      ],
      "dependents": ["mw-icon-gallery", "mw-login"],
      "dependencies": [],
      "dependencyGraph": {
        "mw-icon-gallery": ["mw-textfield"],
        "mw-login": ["mw-textfield"]
      }
    }
  ]
}
