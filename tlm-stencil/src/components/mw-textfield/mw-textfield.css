:host {
  display: block;
}

.wrapper {
  display: inline-flex;
  flex-direction: column;
}

.textfield {
  display: flex;
  flex-direction: column;
  min-width: var(--mw-component-size-input-min-width);
  color: var(--mw-component-input-fg-default);
}

.textfield.disabled, .textfield.disabled input {
  color: var(--mw-component-input-fg-disabled);
}

label {
  padding: 0 var(--mw-component-input-padding-input-field-label-vertical-x);
  font-family: var(--mw-component-input-label-font-family);
  font-weight: var(--mw-component-input-label-font-weight);
  font-size: var(--mw-component-input-label-font-size);
  line-height: var(--mw-component-input-label-line-height);
}

.textfield.inline {
  flex-direction: row;
  display: inline-flex;
  align-items: center;
}

.textfield.inline .input {
  width: max-content;
  min-width: var(--mw-component-size-input-min-width);
}

.textfield.inline label {
  width: var(--mw-component-size-input-label-horizontal-width);
  padding: var(--mw-component-input-padding-input-field-label-horizontal);
}

.input {
  display: flex;
  /* TODO: verify token */
  gap: var(--mw-component-input-gap-horizontal-input-field);
  /* TODO: missing token */
  border-radius: var(--border-radius-standard-md);
  padding: var(--mw-component-input-padding-input-field-y) var(--mw-component-input-padding-input-field-x);
  background: var(--mw-component-input-bg-default);
  outline: var(--mw-component-input-default) solid var(--mw-component-input-border-default);
}

.input:focus-within {
  background: var(--mw-component-input-bg-default);
  outline: var(--mw-component-input-focused) solid var(--mw-component-input-border-focused);
}

.input:not(.disabled):hover {
  background: var(--mw-component-input-bg-hover);
}

.input.has-error {
  background: var(--mw-component-input-bg-error);
}

.input .icon {
  color: var(--mw-component-input-fg-icon-default);
}

.focused {
  color: var(--mw-component-input-fg-icon-focused);
}

.focused.has-error {
  color: var(--mw-component-input-fg-error);
}

.input inputÂ {
 border: none;
  padding: 0;
  width: 100%;
  background: transparent;
  font-family: var(--mw-component-input-text-font-family);
  font-weight: var(--mw-component-input-text-font-weight);
  font-size: var(--mw-component-input-text-font-size);
  line-height: var(--mw-component-input-text-line-height);
}

.input input:focus-visible, .input input:focus {
  outline: none;
  border: none;
}

.input input::placeholder {
  color: var(--mw-component-input-fg-placeholder);
}

.helper-text {
  align-self: flex-end;
  padding: var(--mw-component-input-padding-helper-text-y) 0;
  color: var(--mw-component-input-fg-helper-text);
  font-family: var(--mw-component-input-helper-text-font-family);
  font-weight: var(--mw-component-input-helper-text-font-weight);
  font-size: var(--mw-component-input-helper-text-font-size);
  line-height: var(--mw-component-input-helper-text-line-height);
}

.has-error {
  color: var(--mw-component-input-fg-error);
}

.required {
  color: var(--mw-component-input-fg-error);
}
